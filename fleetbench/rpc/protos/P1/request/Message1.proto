// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License" );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an " AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: DO NOT EDIT! This file is auto-generated.
syntax = "proto2";

package fleetbench.rpc.P1.request.Message1;

message Message1 {
  optional bool f_0 = 1;
  enum E1 {
    E1_UNSPECIFIED = 0;
    E1_CONST_1 = 45;
    E1_CONST_2 = 96;
    E1_CONST_3 = 44;
    E1_CONST_4 = 80;
    E1_CONST_5 = 4;
  }
  optional E1 f_1 = 2;
  optional bool f_2 = 3;
  message M1 {
    optional int32 f_0 = 1;
    message M5 {
      optional int32 f_0 = 1;
      optional int32 f_1 = 2;
      optional int64 f_2 = 4;
      optional int64 f_3 = 6;
      message M6 {
        optional bytes f_0 = 1;
        optional bool f_1 = 2;
      }
      optional M6 f_7 = 7;
    }
    optional M5 f_2 = 2;
  }
  repeated M1 f_5 = 5;
  message M2 {
    optional bool f_0 = 2;
  }
  optional M2 f_7 = 7;
  message M3 {
    optional fixed32 f_0 = 1;
    optional string f_1 = 2;
  }
  repeated M3 f_8 = 8;
  message M4 {
    optional int64 f_0 = 1;
    enum E2 {
      E2_UNSPECIFIED = 0;
      E2_CONST_1 = 44;
      E2_CONST_2 = 69;
      E2_CONST_3 = 60;
      E2_CONST_4 = 1;
      E2_CONST_5 = 49;
    }
    optional E2 f_1 = 2;
    optional fixed32 f_2 = 3;
    optional bool f_3 = 4;
  }
  optional M4 f_9 = 9;
}
