// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License" );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an " AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: DO NOT EDIT! This file is auto-generated.

#ifndef THIRD_PARTY_FLEETBENCH_RPC_RPCPERF_PROTOS_P2_REQUEST_ACCESS_MESSAGE1_H_
#define THIRD_PARTY_FLEETBENCH_RPC_RPCPERF_PROTOS_P2_REQUEST_ACCESS_MESSAGE1_H_

#include <string>

#include "absl/log/check.h"
#include "fleetbench/rpc/protos/P2/request/Message1.pb.h"

namespace fleetbench::rpc::P2::request::Message1 {
inline void Message1_Set_1(Message1* message, std::string* s) {
  message->set_f_20(0.367127);
  message->set_f_11(0x2363b45ad9da8f7);
  message->set_f_15(0xc23a076a0544f5f3);
  message->set_f_7(s->substr(0, 16));
  Message1::M1* v0_0 = message->add_f_49();
  Message1::M1::M20* v1_0 = v0_0->add_f_10();
  v1_0->set_f_0(0x2df8a22);
  Message1::M1::M9* v2_0 = v0_0->add_f_4();
  v2_0->set_f_0(0xe55894f35b2e3bff);
  v0_0->set_f_0(0xc34d9);
  Message1::M1::M12* v3 = v0_0->mutable_f_6();
  Message1::M1::M12::M27* v4 = v3->mutable_f_6();
  Message1::M1::M12::M27::M41* v5_0 = v4->add_f_2();
  v5_0->set_f_0(0x49);
  v4->set_f_0(s->substr(0, 26));
  v3->set_f_0(0.200443);
  v3->set_f_1(true);
  v3->set_f_2(0x7482441);
  v3->set_f_3(0xc8899821dae1358f);
  Message1::M1::M18* v6 = v0_0->mutable_f_8();
  v6->set_f_18(0x2f);
  v6->set_f_10(s->substr(0, 6));
  v6->set_f_19(0x3f8cb9e);
  v6->set_f_25(s->substr(0, 6));
  v6->set_f_3(0xd335cd7bdf785844);
  v6->set_f_13(0x39);
  v6->set_f_6(0x6);
  v6->set_f_5(false);
  v6->set_f_2(s->substr(0, 4));
  v6->set_f_15(0x84dd94b138a4546a);
  v6->set_f_7(0x23);
  v6->set_f_14(0xde7);
  v6->set_f_28(0x7b);
  v6->set_f_17(s->substr(0, 1));
  v6->set_f_23(s->substr(0, 17));
  v6->set_f_8(s->substr(0, 5));
  v6->set_f_11(true);
  v6->set_f_21(0x85fac6d7ec6433e4);
  v6->set_f_4(0x242c9ebc937c629f);
  v6->set_f_0(0x7c55d6ec);
  v6->set_f_16(s->substr(0, 3));
  v6->set_f_20(0x8d9fb1b);
  v6->set_f_26(0x2b9f);
  v0_0->set_f_1(0xbd881);
  Message1::M1::M13* v7 = v0_0->mutable_f_7();
  v7->set_f_2(true);
  v7->set_f_0(0x51e79f58);
  v7->set_f_1(false);
  message->set_f_21(0xe7cac860300044d3);
  message->set_f_18(0.058056);
  message->set_f_24(true);
  message->set_f_19(0x45);
  Message1::M5* v8 = message->mutable_f_55();
  v8->set_f_2(0x13);
  v8->set_f_0(0x3bd45c51aaf3015b);
  v8->set_f_3(s->substr(0, 3));
  v8->set_f_1(0xaa9579e);
  Message1::M5::M23* v9 = v8->mutable_f_8();
  Message1::M5::M23::M30* v10 = v9->mutable_f_2();
  v10->set_f_1(s->substr(0, 25));
  v10->set_f_2(0x277330db5b048ef2);
  v10->set_f_0(0xf96ffcc);
  Message1::M5::M23::M30::M39* v11 = v10->mutable_f_5();
  v11->set_f_3(0x22d9);
  v11->set_f_2(0x6b);
  v11->set_f_0(0xc8b8e);
  v9->set_f_0(0x4a2d4a1f);
  Message1::M2* v12_0 = message->add_f_50();
  v12_0->set_f_1(Message1::M2::E1_CONST_5);
  v12_0->set_f_3(s->substr(0, 4));
  Message1::M2::M19* v13 = v12_0->mutable_f_11();
  v13->set_f_0(0x9167c);
  Message1::M2::M19::M33* v14 = v13->mutable_f_2();
  v14->set_f_0(false);
  v12_0->add_f_2(Message1::M2::E2_CONST_5);
  v12_0->set_f_0(s->substr(0, 5));
  Message1::M2::M24* v15_0 = v12_0->add_f_12();
  v15_0->set_f_8(0x47e6ca9d);
  v15_0->set_f_29(0x75);
  v15_0->set_f_28(s->substr(0, 124));
  v15_0->set_f_4(true);
  v15_0->set_f_5(s->substr(0, 16));
  v15_0->set_f_15(0xc6888237c473c784);
  v15_0->set_f_0(0x7d9208b4);
  v15_0->set_f_6(s->substr(0, 50));
  v15_0->set_f_30(0.265179);
  v15_0->set_f_3(0xf1b9a3967d93bce8);
  v15_0->set_f_22(true);
  v15_0->set_f_12(0x7c53e22);
  v15_0->set_f_11(0x4c);
  v15_0->set_f_31(s->substr(0, 1));
  v15_0->set_f_16(0x1069a10d2b37dd09);
  v15_0->set_f_10(s->substr(0, 82));
  v15_0->set_f_25(s->substr(0, 18));
  v15_0->set_f_7(0x2751951cd526fe8b);
  v15_0->set_f_1(0xf6552e6f38a9138e);
  Message1::M2::M24::M31* v16 = v15_0->mutable_f_45();
  v16->set_f_0(s->substr(0, 4));
  v15_0->set_f_27(0x10);
  v15_0->set_f_21(0xe714eb6677d86e89);
  v15_0->set_f_14(0xcbb671ed4aebdb9b);
  v15_0->set_f_20(0x8549dcdef0a3fd87);
  v15_0->set_f_19(0x26);
  v15_0->set_f_17(s->substr(0, 18));
  v15_0->set_f_2(0xc5274f6);
  v15_0->set_f_26(0.625870);
  v15_0->set_f_24(0xd5b9310cac12aefb);
  Message1::M2::M16* v17_0 = v12_0->add_f_10();
  v17_0->set_f_3(s->substr(0, 24));
  v17_0->set_f_2(true);
  v17_0->set_f_0(0x3557d7e259c77e68);
  v17_0->set_f_1(0x8);
  Message1::M2::M16::M36* v18 = v17_0->mutable_f_6();
  v18->set_f_2(0x1c0e201d229);
  v18->set_f_4(s->substr(0, 148));
  v18->set_f_1(Message1::M2::M16::M36::E5_CONST_2);
  v18->set_f_0(s->substr(0, 83));
  message->set_f_17(s->substr(0, 167));
  message->set_f_6(s->substr(0, 114));
  Message1::M7* v19 = message->mutable_f_61();
  v19->set_f_2(0x4bc794ea);
  v19->set_f_1(0x24);
  v19->set_f_3(true);
  v19->set_f_0(true);
  message->set_f_2(0x76);
  message->set_f_5(0xb073247a49535e76);
  Message1::M3* v20_0 = message->add_f_53();
  v20_0->set_f_0(0.105724);
  Message1::M3::M11* v21 = v20_0->mutable_f_3();
  v21->set_f_0(0x62);
  message->set_f_0(0x1bba5a3);
  message->set_f_8(0x4f93e76);
  message->set_f_4(true);
  message->set_f_22(s->substr(0, 368));
  message->set_f_28(0x22fd);
  message->set_f_30(0x37);
  message->set_f_14(0x3f51cd8e9c50a1f2);
  message->set_f_12(0xb16063fd9f54d23a);
  message->set_f_26(0xf0c89b35a76ed825);
  message->set_f_16(s->substr(0, 2382));
  message->set_f_25(0xf3c8c69);
  message->set_f_9(s->substr(0, 638));
  message->set_f_3(0xc);
  Message1::M6* v22 = message->mutable_f_59();
  Message1::M6::M21* v23 = v22->mutable_f_7();
  v23->set_f_6(0x1e2c);
  v23->set_f_4(0x68);
  v23->set_f_1(0x24ec2791);
  v23->set_f_2(0x87a4fff256a8e997);
  v23->set_f_5(0x50bed5fa40b1442b);
  v23->set_f_7(0xbfea2fc0a50770f7);
  v23->set_f_3(0x55);
  v22->set_f_0(s->substr(0, 8));
  Message1::M6::M14* v24 = v22->mutable_f_3();
  v24->set_f_0(0x19);
  Message1::M6::M14::M34* v25 = v24->mutable_f_4();
  v25->set_f_0(s->substr(0, 30));
  v25->set_f_1(0x74c21de);
  Message1::M6::M14::M25* v26_0 = v24->add_f_3();
  v26_0->set_f_0(0x59);
  message->set_f_27(false);
}
inline void Message1_Set_2(Message1* message, std::string* s) {
  Message1::M4* v0_0 = message->add_f_54();
  Message1::M4::M22* v1 = v0_0->mutable_f_6();
  v1->set_f_2(0x55f94ce3);
  v1->set_f_3(0xce7bbc8298c8d2f);
  v1->set_f_1(s->substr(0, 1));
  v1->set_f_0(0xd2c3caf1548720f);
  Message1::M4::M10* v2 = v0_0->mutable_f_4();
  v2->set_f_0(0x8ec77e6f2773ba51);
  Message1::M4::M10::M29* v3 = v2->mutable_f_9();
  Message1::M4::M10::M29::M47* v4 = v3->mutable_f_4();
  Message1::M4::M10::M29::M47::M51* v5 = v4->mutable_f_2();
  v5->set_f_0(s->substr(0, 25));
  v5->set_f_3(0x7c4675);
  v5->set_f_2(0x2dd1023aa1342ffa);
  v5->set_f_1(0x63);
  v4->set_f_0(s->substr(0, 5));
  v3->set_f_0(0x29);
  Message1::M4::M10::M26* v6_0 = v2->add_f_4();
  v6_0->set_f_0(0x5609eb7dc);
  Message1::M4::M10::M26::M40* v7 = v6_0->mutable_f_3();
  v7->set_f_0(0x70);
  Message1::M4::M10::M26::M43* v8_0 = v6_0->add_f_4();
  v8_0->set_f_0(s->substr(0, 454));
  Message1::M4::M10::M26::M48* v9 = v6_0->mutable_f_5();
  v9->add_f_0(Message1::M4::M10::M26::M48::E6_CONST_5);
  v2->set_f_1(0x2ead03bd);
  v0_0->set_f_0(s->substr(0, 5));
  Message1::M4::M17* v10 = v0_0->mutable_f_5();
  Message1::M4::M17::M32* v11 = v10->mutable_f_6();
  v11->set_f_3(0x991ee);
  v11->set_f_2(false);
  Message1::M4::M17::M32::M44* v12 = v11->mutable_f_6();
  v12->set_f_0(0x76);
  v11->set_f_0(0x1d49794d);
  v10->set_f_1(0x1c);
  message->set_f_28(0x3ee3);
  message->set_f_11(0x10624a1bf1692aba);
  message->set_f_27(false);
  message->set_f_0(0x63431db);
  message->set_f_1(0xc);
  Message1::M3* v13_0 = message->add_f_53();
  v13_0->set_f_0(0.729672);
  message->set_f_21(0xd9474c52615a0e17);
  message->set_f_5(0xc3a19c9e1b6bd583);
  message->set_f_13(0x40);
  message->set_f_26(0xe3a928d446dccb88);
  Message1::M6* v14 = message->mutable_f_59();
  Message1::M6::M15* v15_0 = v14->add_f_5();
  v15_0->set_f_1(0xca00224);
  v15_0->set_f_3(0x5606cb66);
  v15_0->set_f_2(false);
  Message1::M6::M15::M38* v16_0 = v15_0->add_f_7();
  Message1::M6::M15::M38::M45* v17 = v16_0->mutable_f_8();
  Message1::M6::M15::M38::M45::M50* v18 = v17->mutable_f_2();
  v18->set_f_5(s->substr(0, 19));
  v18->set_f_1(0xb0e71bb7a70a97b1);
  v18->set_f_3(0x6d360ac12f4e722e);
  v18->set_f_4(0x13fa7c0d72a2028d);
  v18->set_f_0(s->substr(0, 2));
  v18->set_f_2(s->substr(0, 30));
  v17->set_f_0(0x58c2d037);
  v16_0->set_f_1(0x220064d3);
  v16_0->set_f_2(s->substr(0, 19));
  v15_0->set_f_0(false);
  v14->set_f_0(s->substr(0, 32));
  Message1::M6::M8* v19 = v14->mutable_f_2();
  v19->set_f_0(0x4d35c3dc);
  v19->set_f_2(0x6057f8abbfb87dbd);
  v19->set_f_9(0x51);
  v19->set_f_1(Message1::M6::M8::E3_CONST_3);
  v19->set_f_8(0x58);
  v19->set_f_3(false);
  v19->set_f_5(s->substr(0, 213));
  v19->set_f_6(0x66411271);
  v19->set_f_7(Message1::M6::M8::E4_CONST_4);
  Message1::M6::M21* v20 = v14->mutable_f_7();
  v20->set_f_5(0xafbf130e0c98156);
  v20->set_f_0(s->substr(0, 109));
  v20->set_f_4(0x3c03f);
  v20->set_f_7(0x41a475ef0371faa7);
  v20->set_f_3(0x40);
  v20->set_f_2(0x98f7af33f8f3198b);
  v20->set_f_6(0x282f962);
  v20->set_f_1(0x4988be06);
  message->set_f_2(0x9d9135);
  message->set_f_23(0x48102692);
  message->set_f_20(0.092083);
  Message1::M2* v21_0 = message->add_f_50();
  v21_0->set_f_4(s->substr(0, 1));
  v21_0->set_f_3(s->substr(0, 23));
  v21_0->add_f_2(Message1::M2::E2_CONST_1);
  v21_0->set_f_0(s->substr(0, 17));
  Message1::M2::M19* v22 = v21_0->mutable_f_11();
  v22->set_f_0(0x91203);
  Message1::M2::M16* v23_0 = v21_0->add_f_10();
  v23_0->set_f_1(0x77);
  Message1::M2::M16::M36* v24 = v23_0->mutable_f_6();
  v24->set_f_1(Message1::M2::M16::M36::E5_CONST_2);
  v24->set_f_2(0x3a1c60bbe73);
  v24->set_f_4(s->substr(0, 8));
  v24->set_f_0(s->substr(0, 4));
  v23_0->set_f_3(s->substr(0, 3));
  v23_0->set_f_0(0xcd8f372a08642899);
  v21_0->set_f_1(Message1::M2::E1_CONST_3);
  message->set_f_6(s->substr(0, 9));
  message->set_f_30(0xb49db7d);
  Message1::M1* v25_0 = message->add_f_49();
  Message1::M1::M9* v26_0 = v25_0->add_f_4();
  v26_0->set_f_0(0xbdcf83238f59d840);
  Message1::M1::M9::M37* v27 = v26_0->mutable_f_2();
  v27->set_f_0(0x48b27974a772d871);
  Message1::M1::M18* v28 = v25_0->mutable_f_8();
  v28->set_f_2(s->substr(0, 204));
  v28->set_f_16(s->substr(0, 2));
  v28->set_f_12(s->substr(0, 9));
  v28->set_f_26(0x43);
  v28->set_f_27(false);
  v28->set_f_17(s->substr(0, 385));
  v28->set_f_10(s->substr(0, 3));
  v28->set_f_6(0x100130);
  v28->set_f_28(0x3e);
  v28->set_f_13(0x6d);
  v28->set_f_22(s->substr(0, 6));
  v28->set_f_9(0x3b26a8d1);
  v28->set_f_19(0x62001dc);
  v28->set_f_18(0x1d3db0);
  v28->set_f_3(0x4ff20a1f26338f8f);
  v28->set_f_11(false);
  v28->set_f_25(s->substr(0, 22));
  v28->set_f_15(0x4e773ab2970c53d4);
  v28->set_f_20(0xbea7f);
  v28->set_f_5(true);
  v28->set_f_14(0x27c9);
  v28->set_f_29(s->substr(0, 32));
  v28->set_f_8(s->substr(0, 7));
  v28->set_f_4(0xbc644a20f1338259);
  v28->set_f_23(s->substr(0, 3));
  v25_0->set_f_1(0xf);
  v25_0->set_f_0(0x154164);
  Message1::M1::M13* v29 = v25_0->mutable_f_7();
  v29->set_f_0(0x6f14e793);
  v29->set_f_1(true);
  v29->set_f_2(false);
  Message1::M1::M20* v30_0 = v25_0->add_f_10();
  v30_0->set_f_0(0x19b5636);
  message->set_f_9(s->substr(0, 1));
  message->set_f_14(0xd497d3a3ef082c21);
  message->set_f_15(0x52a1e93126fa1cb1);
  Message1::M5* v31 = message->mutable_f_55();
  v31->set_f_1(0x1a);
  v31->set_f_2(0xdec0416);
  v31->set_f_3(s->substr(0, 167));
  Message1::M5::M23* v32 = v31->mutable_f_8();
  v32->set_f_0(0x32f8866);
  Message1::M5::M23::M30* v33 = v32->mutable_f_2();
  v33->set_f_0(0x33);
  v33->set_f_1(s->substr(0, 8));
  Message1::M5::M23::M30::M39* v34 = v33->mutable_f_5();
  v34->set_f_4(s->substr(0, 509));
  v34->set_f_2(0x1a5e68a);
  v34->set_f_1(s->substr(0, 10));
  v34->set_f_3(0xd71980b);
  v33->set_f_2(0x9f48f331d55eef7e);
  v31->set_f_0(0x62f8984ea3ad7500);
  message->set_f_29(s->substr(0, 5));
  message->set_f_3(0xae9b02c);
  message->set_f_16(s->substr(0, 22));
  message->set_f_24(true);
  message->set_f_22(s->substr(0, 17439));
  message->set_f_19(0x78);
}
inline void Message1_Set_3(Message1* message, std::string* s) {
  message->set_f_15(0x58c567f9eafd866b);
  message->set_f_4(true);
  message->set_f_28(0x30);
  Message1::M6* v0 = message->mutable_f_59();
  Message1::M6::M15* v1_0 = v0->add_f_5();
  v1_0->set_f_0(false);
  v1_0->set_f_1(0x8d4092a);
  v1_0->set_f_3(0xa8337f1);
  Message1::M6::M15::M38* v2_0 = v1_0->add_f_7();
  v2_0->set_f_2(s->substr(0, 91));
  v2_0->set_f_0(0x3977d54a);
  Message1::M6::M15::M38::M45* v3 = v2_0->mutable_f_8();
  Message1::M6::M15::M38::M45::M50* v4 = v3->mutable_f_2();
  v4->set_f_2(s->substr(0, 8));
  v4->set_f_1(0x1a568605287d11d0);
  v4->set_f_4(0x66936628f120c83f);
  v4->set_f_0(s->substr(0, 18));
  v3->set_f_0(0x6e2b0a3b);
  v2_0->set_f_1(0x1d526f54);
  v1_0->set_f_2(true);
  Message1::M6::M8* v5 = v0->mutable_f_2();
  v5->set_f_3(false);
  v5->set_f_1(Message1::M6::M8::E3_CONST_5);
  v5->set_f_7(Message1::M6::M8::E4_CONST_2);
  v5->set_f_2(0x7e57ea46932d428d);
  v5->set_f_9(0xa17d662);
  v5->set_f_8(0x1717);
  v5->set_f_6(0x4acea16d);
  v5->set_f_4(0x36);
  Message1::M6::M14* v6 = v0->mutable_f_3();
  Message1::M6::M14::M25* v7_0 = v6->add_f_3();
  v7_0->set_f_0(0x7c);
  v6->set_f_0(0x9a0279a);
  v0->set_f_0(s->substr(0, 22));
  message->set_f_19(0x7);
  Message1::M7* v8 = message->mutable_f_61();
  v8->set_f_2(0x58e51e57);
  v8->set_f_0(true);
  v8->set_f_3(false);
  v8->set_f_1(0x4c);
  message->set_f_17(s->substr(0, 4));
  message->set_f_24(false);
  message->set_f_0(0x1be5743);
  message->set_f_21(0xf9f5a249896fb3ac);
  message->set_f_3(0x4c83964);
  message->set_f_22(s->substr(0, 174));
  Message1::M4* v9_0 = message->add_f_54();
  Message1::M4::M10* v10 = v9_0->mutable_f_4();
  Message1::M4::M10::M29* v11 = v10->mutable_f_9();
  Message1::M4::M10::M29::M47* v12 = v11->mutable_f_4();
  Message1::M4::M10::M29::M47::M51* v13 = v12->mutable_f_2();
  v13->set_f_0(s->substr(0, 24));
  v13->set_f_2(0xbfedafbff7ebb79e);
  v13->set_f_3(0x6a);
  v13->set_f_1(0x25);
  v11->set_f_0(0x2d749a4);
  Message1::M4::M10::M26* v14_0 = v10->add_f_4();
  Message1::M4::M10::M26::M48* v15 = v14_0->mutable_f_5();
  Message1::M4::M10::M26::M48::E6 array_0[21] = {
      Message1::M4::M10::M26::M48::E6_CONST_5,
      Message1::M4::M10::M26::M48::E6_CONST_5,
      Message1::M4::M10::M26::M48::E6_CONST_1,
      Message1::M4::M10::M26::M48::E6_CONST_1,
      Message1::M4::M10::M26::M48::E6_CONST_4,
      Message1::M4::M10::M26::M48::E6_CONST_3,
      Message1::M4::M10::M26::M48::E6_CONST_2,
      Message1::M4::M10::M26::M48::E6_CONST_4,
      Message1::M4::M10::M26::M48::E6_CONST_5,
      Message1::M4::M10::M26::M48::E6_CONST_4,
      Message1::M4::M10::M26::M48::E6_CONST_1,
      Message1::M4::M10::M26::M48::E6_CONST_5,
      Message1::M4::M10::M26::M48::E6_CONST_2,
      Message1::M4::M10::M26::M48::E6_CONST_2,
      Message1::M4::M10::M26::M48::E6_CONST_5,
      Message1::M4::M10::M26::M48::E6_CONST_2,
      Message1::M4::M10::M26::M48::E6_CONST_1,
      Message1::M4::M10::M26::M48::E6_CONST_3,
      Message1::M4::M10::M26::M48::E6_CONST_2,
      Message1::M4::M10::M26::M48::E6_CONST_4,
      Message1::M4::M10::M26::M48::E6_CONST_2,
  };
  for (auto v : array_0) {
    v15->add_f_0(v);
  }
  Message1::M4::M10::M26::M40* v16 = v14_0->mutable_f_3();
  v16->set_f_0(0x34);
  v14_0->set_f_0(0x3d);
  Message1::M4::M10::M26::M43* v17_0 = v14_0->add_f_4();
  (void)v17_0;  // Suppresses clang-tidy.
  v10->set_f_1(0xca4a393);
  Message1::M4::M22* v18 = v9_0->mutable_f_6();
  v18->set_f_0(0x7d8ec2588fb54cbd);
  v18->set_f_1(s->substr(0, 19));
  v9_0->set_f_0(s->substr(0, 6));
  Message1::M4::M17* v19 = v9_0->mutable_f_5();
  v19->set_f_0(0xa53ee33);
  v19->set_f_1(0x31);
  Message1::M4::M17::M32* v20 = v19->mutable_f_6();
  v20->set_f_2(true);
  Message1::M4::M17::M32::M44* v21 = v20->mutable_f_6();
  v21->set_f_0(0x59);
  v20->set_f_1(0x8ea1f0527368f9bd);
  v19->set_f_2(0xcbcd83aca125542b);
  Message1::M3* v22_0 = message->add_f_53();
  Message1::M3::M11* v23 = v22_0->mutable_f_3();
  (void)v23;  // Suppresses clang-tidy.
  v22_0->set_f_0(0.029750);
  message->set_f_27(true);
  message->set_f_23(0x3c11b7d7);
  message->set_f_6(s->substr(0, 2));
  message->set_f_11(0x7bca08c8570d2d6c);
  message->set_f_7(s->substr(0, 7));
  message->set_f_13(0x1d);
  message->set_f_25(0x3b0);
  message->set_f_20(0.792800);
  message->set_f_10(s->substr(0, 2));
  message->set_f_2(0x350461d);
  Message1::M1* v24_0 = message->add_f_49();
  Message1::M1::M13* v25 = v24_0->mutable_f_7();
  v25->set_f_0(0x393c6af8);
  v24_0->set_f_0(0x5b);
  v24_0->set_f_1(0x4cbe756);
  Message1::M1::M9* v26_0 = v24_0->add_f_4();
  Message1::M1::M9::M37* v27 = v26_0->mutable_f_2();
  v27->set_f_0(0xa7b12a8c4c8cfb1e);
  v26_0->set_f_0(0x72e7d24accc2013b);
  Message1::M1::M18* v28 = v24_0->mutable_f_8();
  v28->set_f_27(false);
  v28->set_f_23(s->substr(0, 32));
  v28->set_f_19(0x6b);
  v28->set_f_3(0x4f80ed2ff5bdc3a7);
  v28->set_f_6(0x64084);
  v28->set_f_0(0x44464e64);
  v28->set_f_10(s->substr(0, 269));
  v28->set_f_4(0x391f0658615bd00d);
  v28->set_f_18(0x4e);
  v28->set_f_16(s->substr(0, 193));
  v28->set_f_21(0xaba832603e78c3af);
  v28->set_f_26(0x483e677);
  v28->set_f_13(0x677ae);
  v28->set_f_1(s->substr(0, 10));
  v28->set_f_7(0xdbb144f);
  v28->set_f_22(s->substr(0, 14));
  v28->set_f_24(0xa5d05c9);
  v28->set_f_17(s->substr(0, 38));
  v28->set_f_12(s->substr(0, 7));
  v28->set_f_15(0x98130c7fd4bdc089);
  v28->set_f_8(s->substr(0, 4));
  v28->set_f_2(s->substr(0, 3));
  v28->set_f_20(0x9b7db7a);
  v28->set_f_14(0x6749198);
  v28->set_f_9(0x53746664);
  v28->set_f_25(s->substr(0, 27));
  v28->set_f_29(s->substr(0, 34));
  Message1::M1::M20* v29_0 = v24_0->add_f_10();
  v29_0->set_f_0(0x1b);
  Message1::M2* v30_0 = message->add_f_50();
  v30_0->set_f_3(s->substr(0, 9));
  v30_0->set_f_0(s->substr(0, 3));
  v30_0->add_f_2(Message1::M2::E2_CONST_4);
  v30_0->set_f_1(Message1::M2::E1_CONST_2);
  Message1::M2::M19* v31 = v30_0->mutable_f_11();
  Message1::M2::M19::M33* v32 = v31->mutable_f_2();
  v32->set_f_0(true);
  v31->set_f_0(0xc06b245);
  Message1::M2::M24* v33_0 = v30_0->add_f_12();
  v33_0->set_f_21(0x628ce4148fddcdb3);
  v33_0->set_f_8(0x7e353fe3);
  v33_0->set_f_30(0.880452);
  v33_0->set_f_2(0x124a06);
  v33_0->set_f_26(0.526999);
  v33_0->set_f_7(0xd8aa41cd51acddb3);
  v33_0->set_f_5(s->substr(0, 14));
  v33_0->set_f_10(s->substr(0, 7));
  v33_0->set_f_22(true);
  v33_0->set_f_19(0x68);
  v33_0->set_f_15(0x32e06bbf46883fe6);
  v33_0->set_f_3(0x69d9d1a777419e07);
  v33_0->set_f_6(s->substr(0, 99));
  v33_0->set_f_24(0xf25e13be17c38f9d);
  Message1::M2::M24::M31* v34 = v33_0->mutable_f_45();
  v34->set_f_0(s->substr(0, 3));
  v33_0->set_f_23(0x26755c1);
  v33_0->set_f_14(0xdedeba53c18e7edc);
  v33_0->set_f_4(false);
  v33_0->set_f_9(0x1203ce1);
  v33_0->set_f_17(s->substr(0, 15));
  v33_0->set_f_0(0x4f6f7468);
  v33_0->set_f_25(s->substr(0, 3));
  v33_0->set_f_13(0x25b7);
  v33_0->set_f_1(0x2103c0db8f78b094);
  v33_0->set_f_12(0x75);
  v33_0->set_f_20(0x2b5557f2398aba4);
  v33_0->set_f_18(false);
  v33_0->set_f_29(0xd3684);
  v33_0->set_f_27(0x13);
  v33_0->set_f_31(s->substr(0, 63));
  v33_0->set_f_28(s->substr(0, 11));
  message->set_f_14(0xf7d2b17ecc10beda);
  message->set_f_5(0xd8585e3c12b7c0cb);
  message->set_f_12(0x79bf97ed965cce21);
  message->set_f_26(0xc9d6be7779a82dfa);
  message->set_f_30(0xe3bb59d);
}
inline void Message1_Set_4(Message1* message, std::string* s) {
  Message1::M2* v0_0 = message->add_f_50();
  v0_0->set_f_0(s->substr(0, 8));
  Message1::M2::M19* v1 = v0_0->mutable_f_11();
  v1->set_f_0(0x32);
  Message1::M2::M19::M33* v2 = v1->mutable_f_2();
  v2->set_f_0(true);
  v0_0->set_f_1(Message1::M2::E1_CONST_3);
  v0_0->set_f_4(s->substr(0, 22));
  v0_0->set_f_3(s->substr(0, 71));
  Message1::M2::M16* v3_0 = v0_0->add_f_10();
  v3_0->set_f_2(false);
  v3_0->set_f_0(0x9cae962363484bdc);
  Message1::M7* v4 = message->mutable_f_61();
  v4->set_f_1(0x6e);
  v4->set_f_0(true);
  v4->set_f_3(true);
  message->set_f_28(0x75);
  message->set_f_18(0.700417);
  message->set_f_11(0xffb2f16ee145bcd2);
  message->set_f_15(0x993476ab156d7582);
  message->set_f_5(0x95817b76c278d1be);
  message->set_f_29(s->substr(0, 18));
  message->set_f_10(s->substr(0, 8));
  message->set_f_4(false);
  message->set_f_16(s->substr(0, 280));
  message->set_f_17(s->substr(0, 4));
  message->set_f_14(0x4a827b4ea7e20889);
  message->set_f_30(0x29);
  message->set_f_9(s->substr(0, 3466));
  message->set_f_6(s->substr(0, 29));
  message->set_f_2(0xc9f1f98);
  message->set_f_24(true);
  message->set_f_20(0.206227);
  Message1::M5* v5 = message->mutable_f_55();
  v5->set_f_0(0x5c712b4df9783344);
  Message1::M5::M23* v6 = v5->mutable_f_8();
  Message1::M5::M23::M30* v7 = v6->mutable_f_2();
  v7->set_f_1(s->substr(0, 15));
  v7->set_f_2(0xff8f4b5c8d9fd880);
  v7->set_f_0(0x296f);
  v6->set_f_0(0x164c42cd);
  v5->set_f_3(s->substr(0, 2));
  message->set_f_27(false);
  Message1::M6* v8 = message->mutable_f_59();
  Message1::M6::M8* v9 = v8->mutable_f_2();
  v9->set_f_7(Message1::M6::M8::E4_CONST_2);
  v9->set_f_5(s->substr(0, 9));
  v9->set_f_6(0x295ac8cf);
  v9->set_f_3(false);
  v9->set_f_2(0x8c474121017dafbd);
  v9->set_f_9(0x66);
  v9->set_f_8(0x3c);
  v9->set_f_4(0x47);
  Message1::M6::M15* v10_0 = v8->add_f_5();
  v10_0->set_f_3(0x3e22a874);
  v10_0->set_f_2(true);
  v10_0->set_f_0(true);
  Message1::M6::M15::M38* v11_0 = v10_0->add_f_7();
  v11_0->set_f_0(0x202396a8);
  Message1::M6::M15::M38::M45* v12 = v11_0->mutable_f_8();
  Message1::M6::M15::M38::M45::M50* v13 = v12->mutable_f_2();
  v13->set_f_3(0x73af23153c6fb003);
  v13->set_f_4(0xb8ba239ebceb2d67);
  v12->set_f_0(0x61252e45);
  v11_0->set_f_2(s->substr(0, 7));
  v11_0->set_f_1(0xdeb92b2);
  Message1::M6::M14* v14 = v8->mutable_f_3();
  v14->set_f_0(0xd14d267);
  Message1::M6::M14::M25* v15_0 = v14->add_f_3();
  v15_0->set_f_0(0x1ae22c);
  Message1::M6::M14::M34* v16 = v14->mutable_f_4();
  v16->set_f_0(s->substr(0, 7));
  v16->set_f_2(0.834033);
  v8->set_f_0(s->substr(0, 4));
  Message1::M6::M21* v17 = v8->mutable_f_7();
  v17->set_f_4(0x467fa49);
  v17->set_f_0(s->substr(0, 3));
  v17->set_f_1(0x50685c46);
  v17->set_f_6(0x71c21eb);
  v17->set_f_3(0x5ce32c7);
  v17->set_f_2(0xdc02b33258396928);
  v17->set_f_7(0xacc9c54d4378512a);
  message->set_f_12(0xa9326d8a9644d3b7);
  message->set_f_0(0x79922);
  Message1::M3* v18_0 = message->add_f_53();
  v18_0->set_f_0(0.659907);
  Message1::M3::M11* v19 = v18_0->mutable_f_3();
  v19->set_f_0(0x740a9de);
  message->set_f_3(0xf5e1f08);
  message->set_f_19(0x55);
  message->set_f_13(0x11);
  Message1::M4* v20_0 = message->add_f_54();
  Message1::M4::M17* v21 = v20_0->mutable_f_5();
  v21->set_f_0(0xc3afdec);
  v21->set_f_1(0x10);
  Message1::M4::M17::M32* v22 = v21->mutable_f_6();
  Message1::M4::M17::M32::M44* v23 = v22->mutable_f_6();
  v23->set_f_0(0x61);
  v22->set_f_2(false);
  v22->set_f_3(0x3d);
  v22->set_f_0(0x7ab602eb);
  v22->set_f_1(0x8db47bb8d0cb4c30);
  Message1::M4::M10* v24 = v20_0->mutable_f_4();
  Message1::M4::M10::M26* v25_0 = v24->add_f_4();
  Message1::M4::M10::M26::M43* v26_0 = v25_0->add_f_4();
  v26_0->set_f_0(s->substr(0, 57));
  Message1::M4::M10::M26::M48* v27 = v25_0->mutable_f_5();
  v27->add_f_0(Message1::M4::M10::M26::M48::E6_CONST_1);
  v27->add_f_0(Message1::M4::M10::M26::M48::E6_CONST_4);
  v27->add_f_0(Message1::M4::M10::M26::M48::E6_CONST_1);
  Message1::M4::M10::M26::M40* v28 = v25_0->mutable_f_3();
  v28->set_f_0(0x710);
  v24->set_f_0(0x1e4222a903da6648);
  Message1::M4::M10::M28* v29 = v24->mutable_f_7();
  v29->set_f_0(0x79f6e7fd);
  Message1::M4::M10::M29* v30 = v24->mutable_f_9();
  v30->set_f_0(0x156501);
  Message1::M4::M10::M29::M47* v31 = v30->mutable_f_4();
  Message1::M4::M10::M29::M47::M51* v32 = v31->mutable_f_2();
  v32->set_f_3(0x61f660e);
  v32->set_f_0(s->substr(0, 25));
  v24->set_f_1(0x4d7199ad);
  v20_0->set_f_0(s->substr(0, 28));
  message->set_f_26(0x8d091d2b0ef16b27);
  message->set_f_23(0x5f6c814b);
}
const int kMessage1MaxProtoSetters = 4;
inline void Message1_Set(const int i, Message1* message, std::string* s) {
  CHECK(i < kMessage1MaxProtoSetters) << "Invalid i";
  switch (i) {
    case 0:
      Message1_Set_1(message, s);
      break;
    case 1:
      Message1_Set_2(message, s);
      break;
    case 2:
      Message1_Set_3(message, s);
      break;
    case 3:
      Message1_Set_4(message, s);
      break;
    default:
      break;
  }
}
}  // namespace fleetbench::rpc::P2::request::Message1

#endif  // THIRD_PARTY_FLEETBENCH_RPC_RPCPERF_PROTOS_P2_REQUEST_ACCESS_MESSAGE1_H_
