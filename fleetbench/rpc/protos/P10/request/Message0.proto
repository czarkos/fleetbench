// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License" );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an " AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: DO NOT EDIT! This file is auto-generated.
syntax = "proto2";

package fleetbench.rpc.P10.request.Message0;

message Message0 {
  optional string f_0 = 1;
  message M1 {
    optional string f_0 = 2;
  }
  optional M1 f_2 = 2;
  message M2 {
    optional string f_0 = 1;
    message M4 {
      optional bool f_0 = 1;
      enum E2 {
        E2_UNSPECIFIED = 0;
        E2_CONST_1 = 20;
        E2_CONST_2 = 104;
        E2_CONST_3 = 4;
        E2_CONST_4 = 126;
        E2_CONST_5 = 92;
      }
      optional E2 f_1 = 4;
      optional int64 f_2 = 5;
      repeated bytes f_3 = 7;
      optional int32 f_4 = 8;
      enum E3 {
        E3_UNSPECIFIED = 0;
        E3_CONST_1 = 69;
        E3_CONST_2 = 36;
        E3_CONST_3 = 54;
        E3_CONST_4 = 5;
        E3_CONST_5 = 68;
      }
      optional E3 f_5 = 9;
      message M5 {
        optional int32 f_0 = 1;
        message M16 {
          optional int64 f_0 = 2;
        }
        optional M16 f_3 = 3;
      }
      repeated M5 f_12 = 12;
      message M6 {
        optional int32 f_0 = 1;
        message M17 {
          optional string f_0 = 1;
          optional string f_1 = 2;
          optional bytes f_2 = 3;
        }
        repeated M17 f_3 = 3;
      }
      optional M6 f_13 = 13;
      message M7 {
        optional uint64 f_0 = 2;
      }
      optional M7 f_14 = 14;
      message M8 {
        optional string f_0 = 1;
      }
      repeated M8 f_16 = 16;
      message M9 {
        optional string f_0 = 1;
        message M15 {
          optional string f_0 = 1;
          message M18 {
            optional bytes f_0 = 3 [ctype = CORD];
            optional int64 f_1 = 4;
            optional int32 f_2 = 5;
            optional int32 f_3 = 6;
            optional string f_4 = 8;
            optional int64 f_5 = 10;
            optional int64 f_6 = 11;
            optional string f_7 = 13;
            optional string f_8 = 14;
            optional string f_9 = 16;
            optional bool f_10 = 18;
            optional int32 f_11 = 19;
            optional uint64 f_12 = 20;
            optional int64 f_13 = 21;
            optional string f_14 = 22;
            optional double f_15 = 23;
            optional bool f_16 = 26;
            optional double f_17 = 27;
            optional uint32 f_18 = 28;
            message M19 {
              optional string f_0 = 1;
              optional bool f_1 = 3;
            }
            repeated M19 f_29 = 29;
            message M20 {
              enum E5 {
                E5_UNSPECIFIED = 0;
                E5_CONST_1 = 19;
                E5_CONST_2 = 8;
                E5_CONST_3 = 69;
                E5_CONST_4 = 107;
                E5_CONST_5 = 68;
              }
              optional E5 f_0 = 1;
            }
            optional M20 f_30 = 30;
            message M21 {
              optional int64 f_0 = 1;
              message M26 {
                optional int64 f_0 = 4;
                enum E7 {
                  E7_UNSPECIFIED = 0;
                  E7_CONST_1 = 77;
                  E7_CONST_2 = 48;
                  E7_CONST_3 = 56;
                  E7_CONST_4 = 95;
                  E7_CONST_5 = 37;
                }
                optional E7 f_1 = 5;
                optional int64 f_2 = 7;
                optional string f_3 = 8;
                optional float f_4 = 9;
                optional int64 f_5 = 10;
                optional int64 f_6 = 11;
                optional string f_7 = 12;
                optional uint64 f_8 = 13;
                optional int64 f_9 = 14;
                optional int64 f_10 = 16;
                optional int32 f_11 = 18;
                enum E8 {
                  E8_UNSPECIFIED = 0;
                  E8_CONST_1 = 112;
                  E8_CONST_2 = 87;
                  E8_CONST_3 = 69;
                  E8_CONST_4 = 9;
                  E8_CONST_5 = 14;
                }
                optional E8 f_12 = 20;
                optional int32 f_13 = 21;
                optional float f_14 = 22;
                optional int32 f_15 = 23;
                optional string f_16 = 24;
                optional bytes f_17 = 26 [ctype = CORD];
                optional int32 f_18 = 27;
                optional bool f_19 = 28;
                optional int32 f_20 = 30;
                optional int64 f_21 = 31;
                message M27 {
                  optional int32 f_0 = 1;
                  optional string f_1 = 3;
                  optional double f_2 = 5;
                  repeated float f_3 = 7 [packed = true];
                  optional int32 f_4 = 9;
                  optional string f_5 = 10;
                  optional string f_6 = 11;
                  optional uint64 f_7 = 13;
                  optional string f_8 = 15;
                  enum E9 {
                    E9_UNSPECIFIED = 0;
                    E9_CONST_1 = 115;
                    E9_CONST_2 = 81;
                    E9_CONST_3 = 123;
                    E9_CONST_4 = 102;
                    E9_CONST_5 = 125;
                  }
                  optional E9 f_9 = 16;
                  optional uint32 f_10 = 17;
                  optional int64 f_11 = 19;
                  optional int32 f_12 = 20;
                  optional int64 f_13 = 21;
                  optional string f_14 = 22;
                  optional int64 f_15 = 23;
                  optional string f_16 = 27;
                  optional uint64 f_17 = 29;
                  message M28 {
                    enum E10 {
                      E10_UNSPECIFIED = 0;
                      E10_CONST_1 = 57;
                      E10_CONST_2 = 88;
                      E10_CONST_3 = 51;
                      E10_CONST_4 = 98;
                      E10_CONST_5 = 105;
                    }
                    optional E10 f_0 = 2;
                    message M30 {
                      optional string f_0 = 2;
                      message M31 {
                        optional int64 f_0 = 2;
                      }
                      optional M31 f_4 = 4;
                    }
                    repeated M30 f_4 = 4;
                  }
                  optional M28 f_32 = 32;
                  message M29 {
                    optional float f_0 = 1;
                  }
                  optional M29 f_34 = 34;
                }
                optional M27 f_32 = 32;
              }
              optional M26 f_3 = 3;
            }
            optional M21 f_31 = 31;
            message M22 {
              enum E6 {
                E6_UNSPECIFIED = 0;
                E6_CONST_1 = 50;
                E6_CONST_2 = 60;
                E6_CONST_3 = 32;
                E6_CONST_4 = 111;
                E6_CONST_5 = 38;
              }
              optional E6 f_0 = 2;
            }
            repeated M22 f_33 = 33;
            message M23 {
              optional float f_0 = 1;
            }
            optional M23 f_36 = 36;
            message M24 {
              optional float f_0 = 1;
            }
            repeated M24 f_38 = 38;
            message M25 {
              optional int64 f_0 = 3;
            }
            optional M25 f_40 = 40;
          }
          optional M18 f_2 = 2;
        }
        optional M15 f_2 = 2;
      }
      repeated M9 f_17 = 17;
      message M10 {
        optional uint64 f_0 = 2;
      }
      optional M10 f_19 = 19;
      message M11 {
        optional float f_0 = 1;
        message M12 {
          optional string f_0 = 1;
        }
        optional M12 f_2 = 2;
        message M13 {
          enum E4 {
            E4_UNSPECIFIED = 0;
            E4_CONST_1 = 77;
            E4_CONST_2 = 16;
            E4_CONST_3 = 12;
            E4_CONST_4 = 26;
            E4_CONST_5 = 62;
          }
          optional E4 f_0 = 1;
        }
        optional M13 f_3 = 3;
        message M14 {
          optional string f_0 = 2;
        }
        optional M14 f_4 = 4;
      }
      optional M11 f_20 = 20;
    }
    optional M4 f_3 = 3;
  }
  optional M2 f_3 = 3;
  message M3 {
    optional float f_0 = 1;
    enum E1 {
      E1_UNSPECIFIED = 0;
      E1_CONST_1 = 21;
      E1_CONST_2 = 103;
      E1_CONST_3 = 16;
      E1_CONST_4 = 48;
      E1_CONST_5 = 26;
    }
    optional E1 f_1 = 2;
  }
  repeated M3 f_5 = 5;
}
