// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License" );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an " AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: DO NOT EDIT! This file is auto-generated.
syntax = "proto2";

package fleetbench.rpc.P7.response.Message1;

message Message1 {
  optional int64 f_0 = 2;
  message M1 {
    optional int64 f_0 = 2;
    enum E1 {
      E1_UNSPECIFIED = 0;
      E1_CONST_1 = 125;
      E1_CONST_2 = 98;
      E1_CONST_3 = 70;
      E1_CONST_4 = 31;
      E1_CONST_5 = 33;
    }
    optional E1 f_1 = 4;
  }
  optional M1 f_4 = 4;
  message M2 {
    optional uint32 f_0 = 2;
    repeated int64 f_1 = 3 [packed = true];
    message M3 {
      optional string f_0 = 1;
      optional int64 f_1 = 2;
      optional uint32 f_2 = 3;
      optional string f_3 = 4;
      optional bool f_4 = 5;
      optional bytes f_5 = 6;
      optional bytes f_6 = 7 [ctype = CORD];
      repeated int64 f_7 = 8 [packed = true];
      repeated string f_8 = 9;
      optional bytes f_9 = 10;
      optional bytes f_10 = 11 [ctype = CORD];
      optional int64 f_11 = 12;
      optional double f_12 = 13;
      optional bytes f_13 = 14 [ctype = CORD];
      optional bool f_14 = 16;
      repeated int64 f_15 = 18 [packed = true];
      optional int32 f_16 = 20;
      message M4 {
        optional string f_0 = 2;
        optional string f_1 = 3;
        optional uint32 f_2 = 4;
      }
      optional M4 f_21 = 21;
    }
    optional M3 f_4 = 4;
  }
  optional M2 f_6 = 6;
}
