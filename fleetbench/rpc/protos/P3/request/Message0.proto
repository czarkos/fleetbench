// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License" );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an " AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: DO NOT EDIT! This file is auto-generated.
syntax = "proto2";

package fleetbench.rpc.P3.request.Message0;

message Message0 {
  optional string f_0 = 1;
  message M1 {
    optional string f_0 = 1;
    message M4 {
      optional string f_0 = 1;
      message M11 {
        optional string f_0 = 1;
        message M12 {
          optional string f_0 = 1;
          message M17 {
            optional string f_0 = 1;
            message M25 {
              optional string f_0 = 1;
            }
            optional M25 f_2 = 2;
            message M27 {
              optional bool f_0 = 1;
              message M35 {
                optional int64 f_0 = 1;
                message M38 {
                  optional string f_0 = 1;
                }
                optional M38 f_2 = 2;
                message M39 {
                  optional string f_0 = 1;
                }
                optional M39 f_3 = 3;
              }
              repeated M35 f_2 = 2;
            }
            optional M27 f_3 = 3;
          }
          repeated M17 f_2 = 2;
        }
        repeated M12 f_2 = 2;
      }
      optional M11 f_2 = 2;
    }
    optional M4 f_2 = 2;
    message M5 {
      optional string f_0 = 1;
      message M9 {
        optional int32 f_0 = 1;
      }
      optional M9 f_2 = 2;
      message M10 {
        optional int32 f_0 = 1;
        message M13 {
          optional string f_0 = 1;
          message M20 {
            optional bytes f_0 = 1;
            message M24 {
              enum E1 {
                E1_UNSPECIFIED = 0;
                E1_CONST_1 = 10;
                E1_CONST_2 = 23;
                E1_CONST_3 = 52;
                E1_CONST_4 = 26;
                E1_CONST_5 = 78;
              }
              optional E1 f_0 = 1;
              message M32 {
                optional int64 f_0 = 1;
              }
              optional M32 f_2 = 2;
            }
            repeated M24 f_2 = 2;
            message M31 {
              optional int64 f_0 = 1;
            }
            optional M31 f_3 = 3;
          }
          optional M20 f_2 = 2;
          message M21 {
            optional int64 f_0 = 1;
          }
          optional M21 f_3 = 3;
          message M23 {
            optional int64 f_0 = 1;
            message M30 {
              optional string f_0 = 2;
              message M33 {
                optional int64 f_0 = 1;
              }
              optional M33 f_3 = 3;
            }
            repeated M30 f_2 = 2;
          }
          repeated M23 f_4 = 4;
        }
        optional M13 f_2 = 2;
        message M15 {
          optional int64 f_0 = 1;
          message M19 {
            optional bool f_0 = 2;
            message M26 {
              optional int64 f_0 = 1;
              message M37 {
                optional string f_0 = 1;
                message M40 {
                  optional string f_0 = 1;
                  optional string f_1 = 2;
                  optional bool f_2 = 3;
                  optional uint64 f_3 = 4;
                  message M41 {
                    optional string f_0 = 1;
                  }
                  optional M41 f_5 = 5;
                }
                optional M40 f_2 = 2;
              }
              repeated M37 f_2 = 2;
            }
            optional M26 f_3 = 3;
          }
          optional M19 f_2 = 2;
        }
        optional M15 f_3 = 3;
      }
      repeated M10 f_3 = 3;
    }
    repeated M5 f_3 = 3;
  }
  optional M1 f_2 = 2;
  message M2 {
    optional int64 f_0 = 1;
    message M3 {
      optional string f_0 = 1;
      message M7 {
        optional int64 f_0 = 1;
        message M14 {
          optional string f_0 = 1;
          message M18 {
            optional int64 f_0 = 1;
            message M29 {
              optional int64 f_0 = 1;
              message M34 {
                optional bool f_0 = 1;
              }
              repeated M34 f_2 = 2;
            }
            optional M29 f_2 = 2;
          }
          optional M18 f_3 = 3;
          message M22 {
            optional string f_0 = 1;
            message M28 {
              optional int64 f_0 = 1;
              message M36 {
                optional int32 f_0 = 1;
              }
              repeated M36 f_2 = 2;
            }
            optional M28 f_2 = 2;
          }
          optional M22 f_4 = 4;
        }
        repeated M14 f_2 = 2;
      }
      optional M7 f_2 = 2;
      message M8 {
        optional string f_0 = 1;
        message M16 {
          optional int32 f_0 = 1;
        }
        optional M16 f_2 = 2;
      }
      repeated M8 f_3 = 3;
    }
    optional M3 f_2 = 2;
    message M6 {
      optional uint64 f_0 = 1;
    }
    optional M6 f_3 = 3;
  }
  repeated M2 f_3 = 3;
}
