// Generated by //fleetbench/updater/stl:generate_benchmarks
// DO NOT EDIT!

// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef THIRD_PARTY_FLEETBENCH_STL_GENERATED_CORD_BENCHMARKS_H_
#define THIRD_PARTY_FLEETBENCH_STL_GENERATED_CORD_BENCHMARKS_H_

#include <string>
#include <vector>

#include "absl/strings/cord.h"

struct CordBenchmark {
  std::string name;
  std::string label;
  void (*benchmark_code)(std::vector<absl::Cord>&);
  std::vector<absl::Cord> (*benchmark_setup)();
};

std::vector<absl::Cord> CordBenchmarkFleetSetup();
void CordBenchmarkFleet(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark0Setup();
void CordBenchmark0(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark1Setup();
void CordBenchmark1(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark2Setup();
void CordBenchmark2(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark3Setup();
void CordBenchmark3(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark4Setup();
void CordBenchmark4(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark5Setup();
void CordBenchmark5(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark6Setup();
void CordBenchmark6(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark7Setup();
void CordBenchmark7(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark8Setup();
void CordBenchmark8(std::vector<absl::Cord>& cords);
std::vector<absl::Cord> CordBenchmark9Setup();
void CordBenchmark9(std::vector<absl::Cord>& cords);
std::vector<CordBenchmark> GetBenchmarks() {
  return {
      CordBenchmark{//
                    "BM_CORD_Fleet",
                    "",
                    CordBenchmarkFleet, CordBenchmarkFleetSetup},
      CordBenchmark{//
                    "BM_CORD_0",
                    "",
                    CordBenchmark0, CordBenchmark0Setup},
      CordBenchmark{//
                    "BM_CORD_1",
                    "",
                    CordBenchmark1, CordBenchmark1Setup},
      CordBenchmark{//
                    "BM_CORD_2",
                    "",
                    CordBenchmark2, CordBenchmark2Setup},
      CordBenchmark{//
                    "BM_CORD_3",
                    "",
                    CordBenchmark3, CordBenchmark3Setup},
      CordBenchmark{//
                    "BM_CORD_4",
                    "",
                    CordBenchmark4, CordBenchmark4Setup},
      CordBenchmark{//
                    "BM_CORD_5",
                    "",
                    CordBenchmark5, CordBenchmark5Setup},
      CordBenchmark{//
                    "BM_CORD_6",
                    "",
                    CordBenchmark6, CordBenchmark6Setup},
      CordBenchmark{//
                    "BM_CORD_7",
                    "",
                    CordBenchmark7, CordBenchmark7Setup},
      CordBenchmark{//
                    "BM_CORD_8",
                    "",
                    CordBenchmark8, CordBenchmark8Setup},
      CordBenchmark{//
                    "BM_CORD_9",
                    "",
                    CordBenchmark9, CordBenchmark9Setup},
  };
}

#endif  // THIRD_PARTY_FLEETBENCH_STL_GENERATED_CORD_BENCHMARKS_H_
